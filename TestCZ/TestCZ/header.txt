R"(#pragma once
#include <string>
#include <cstdint>
#include <cstddef>

#include <Windows.h>

namespace offsets
{
	#pragma pack( push, 1 )
	struct packet_str_t
	{
		const char* str;
		std::size_t reserved1, reserved2, sz;
	};
	#pragma pack( pop )
	
	template < typename type >
	type base( const std::uintptr_t base )
	{
		static const auto image_base = reinterpret_cast< std::uintptr_t >( GetModuleHandleA( nullptr ) );

		return type( image_base + base );
	}

	inline std::string read_packet_str( const packet_str_t* str )
	{
		return str->sz >= 0x10 ? str->str : reinterpret_cast< const char* >( str );;
	}
	
)"